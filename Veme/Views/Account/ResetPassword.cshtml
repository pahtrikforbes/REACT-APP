@model Veme.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Reset password";
    Layout = "~/Views/Shared/_CustomerLayout.cshtml";
}

@Styles.Render("~/Content/register")

@using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4 class="text-center">Reset your password.</h4>
    <hr />
    <div class="text-center text-danger">
        @Html.ValidationSummary("", new { @class = "text-danger", style = "text-align:center" })
    </div>
    <div class="row main">
        <div class="main-login main-center">
            <h5>Password Reset</h5>
            <div class="form-group">
                @Html.LabelFor(c => c.Email, new { @class = "cols-sm-2 control-label" })
                <div class="cols-sm-10">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-at fa" aria-hidden="true"></i></span>
                        @Html.TextBoxFor(c => c.Email, new { @class = "form-control", placeholder = "email@example.com", autocomplete = "off" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Password, new { @class = "cols-sm-2 control-label" })
                <div class="cols-sm-10">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-key fa" aria-hidden="true"></i></span>
                        @*Html.PasswordFor(c => c.Password, new { @class = "form-control", placeholder = "Password", autocomplete = "off" })*@
                        @Html.PasswordFor(c => c.Password, new { @class = "form-control", placeholder = "Password *", autocomplete = "off", Title = "<ul><li>Atleast 6 characters</li><li>Atleast 1 symbols !@#$ etc</li><li>Atleast 1 digit</li></ul>", data_html = true })
                    </div>
                </div>
            </div>
            <div>
                @Html.ValidationMessageFor(c => c.Password)
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.ConfirmPassword, new { @class = "cols-sm-2 control-label" })
                <div class="cols-sm-10">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-key fa" aria-hidden="true"></i></span>
                        @Html.PasswordFor(c => c.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password", autocomplete = "off" })
                    </div>
                </div>
            </div>
            <div>
                @Html.ValidationMessageFor(c => c.ConfirmPassword)
            </div>
            <div class="form-group ">
                <center>
                    @Html.HiddenFor(model => model.Code)
                    <input target="_blank" value="Reset Password" type="submit" id="button" class="btn btn-primary btn-lg btn-block login-button" />
                </center>
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#Password').tooltip({
                placement: "right",
                trigger: "focus"
            });
        });
    </script>
}
